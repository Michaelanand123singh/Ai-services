# =============================================================================
# BLOOCUBE AI SERVICES - GITHUB ACTIONS CI/CD PIPELINE
# =============================================================================

name: Deploy AI Services to GCP Cloud Run

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'AI-services/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'AI-services/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      force_deploy:
        description: 'Force deployment even if tests fail'
        required: false
        default: false
        type: boolean

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION || 'asia-southeast1' }}
  SERVICE_NAME: ai-services
  REGISTRY: gcr.io
  REPO_NAME: bloocube

jobs:
  # =============================================================================
  # CODE QUALITY & TESTING
  # =============================================================================
  test:
    name: Run Tests & Code Quality Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./AI-services
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check src/
          isort --check-only src/

      - name: Run tests
        run: |
          pytest tests/ -v --tb=short

  # =============================================================================
  # BUILD & DEPLOY
  # =============================================================================
  deploy:
    name: Build and Deploy to GCP Cloud Run
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker $_REGION-docker.pkg.dev

      - name: Build Docker image
        run: |
          cd AI-services
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --progress=plain \
            -t $_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$SERVICE_NAME:latest \
            -t $_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$SERVICE_NAME:${{ github.sha }} \
            .

      - name: Push Docker image
        run: |
          docker push $_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$SERVICE_NAME:latest
          docker push $_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$SERVICE_NAME:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$SERVICE_NAME:latest \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --cpu 4 \
            --memory 8Gi \
            --timeout 900 \
            --min-instances 1 \
            --max-instances 10 \
            --concurrency 80 \
            --port 8080 \
            --set-env-vars NODE_ENV=production,ENVIRONMENT=production,LOG_LEVEL=info,AI_SERVICE_NAME=bloocube-ai-service,AI_SERVICE_VERSION=1.0.0,UVICORN_WORKERS=1

      - name: Wait for deployment
        run: |
          echo "Waiting for service to be ready..."
          sleep 30

      - name: Health check
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")
          echo "Service URL: $SERVICE_URL"
          
          # Test endpoints
          echo "Testing ping endpoint..."
          curl -f "$SERVICE_URL/ping" || exit 1
          
          echo "Testing test endpoint..."
          curl -f "$SERVICE_URL/test" || exit 1
          
          echo "Testing root endpoint..."
          curl -f "$SERVICE_URL/" || exit 1
          
          echo "Testing health endpoint..."
          curl -f "$SERVICE_URL/health" || exit 1
          
          echo "Testing docs endpoint..."
          curl -f "$SERVICE_URL/docs" || exit 1
          
          echo "‚úÖ All health checks passed!"

      - name: Output service URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")
          echo "üéâ Bloocube AI Services deployed successfully!"
          echo "üåê Service URL: $SERVICE_URL"
          echo "üìö API Documentation: $SERVICE_URL/docs"

  # =============================================================================
  # NOTIFICATION
  # =============================================================================
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [test, deploy]
    if: always()
    
    steps:
      - name: Notify Success
        if: needs.deploy.result == 'success'
        run: |
          echo "‚úÖ AI Services deployed successfully!"
          # Add notification logic here (Slack, email, etc.)

      - name: Notify Failure
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå AI Services deployment failed!"
          # Add notification logic here (Slack, email, etc.)