# =============================================================================
# BLOOCUBE AI SERVICES - GOOGLE CLOUD RUN SERVICE CONFIGURATION
# =============================================================================

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: bloocube-ai-service
  labels:
    app: bloocube-ai-service
    version: "1.0.0"
    environment: production
  annotations:
    # Cloud Run specific annotations
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
    run.googleapis.com/cpu-throttling: "false"
    # Custom domain (optional)
    # run.googleapis.com/custom-audiences: "your-custom-domain.com"
spec:
  template:
    metadata:
      labels:
        app: bloocube-ai-service
        version: "1.0.0"
      annotations:
        # Scaling configuration
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "10"
        # Resource allocation - optimized for AI workloads
        run.googleapis.com/memory: "8Gi"
        run.googleapis.com/cpu: "4"
        # Timeout configuration
        run.googleapis.com/timeout: "900s"
        # VPC configuration (if needed)
        # run.googleapis.com/vpc-access-connector: "projects/PROJECT_ID/locations/REGION/connectors/CONNECTOR_NAME"
        # run.googleapis.com/vpc-access-egress: "all-traffic"
    spec:
      # Service account for GCP services access
      serviceAccountName: bloocube-ai-service@PROJECT_ID.iam.gserviceaccount.com
      
      # Container timeout
      timeoutSeconds: 300
      
      containers:
      - name: bloocube-ai-service
        # Image will be set during deployment
        image: gcr.io/PROJECT_ID/bloocube-ai-service:latest
        
        ports:
        - name: http1
          containerPort: 8080
          protocol: TCP
        
        # Resource limits and requests
        resources:
          limits:
            cpu: "2000m"
            memory: "2Gi"
          requests:
            cpu: "1000m"
            memory: "1Gi"
        
        # Environment variables
        env:
        # Service Configuration
        - name: AI_SERVICE_NAME
          value: "bloocube-ai-service"
        - name: AI_SERVICE_VERSION
          value: "1.0.0"
        # Cloud Run injects PORT=8080; do not override with a custom AI_SERVICE_PORT
        - name: AI_SERVICE_HOST
          value: "0.0.0.0"
        - name: NODE_ENV
          value: "production"
        - name: ENVIRONMENT
          value: "production"
        # CORS / Hosts
        - name: ALLOWED_CORS_ORIGINS
          value: "https://bloocube.com,https://admin.bloocube.com,https://api-backend.bloocube.com,https://api-ai-services.bloocube.com"
        - name: ALLOWED_HOSTS
          value: "bloocube.com,admin.bloocube.com,api-backend.bloocube.com,api-ai-services.bloocube.com,localhost,127.0.0.1,*"
        
        # Database Configuration
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: mongodb-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: redis-url
        
        # AI Model Configuration
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: openai-api-key
        - name: OPENAI_MODEL
          value: "gpt-4-turbo-preview"
        - name: EMBEDDING_MODEL
          value: "text-embedding-3-large"
        
        # Vector Database
        - name: PINECONE_API_KEY
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: pinecone-api-key
        - name: PINECONE_ENVIRONMENT
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: pinecone-environment
        - name: PINECONE_INDEX_NAME
          value: "bloocube-embeddings"
        
        # Backend Service Integration
        - name: BACKEND_SERVICE_URL
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: backend-service-url
        - name: BACKEND_API_KEY
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: backend-api-key
        
        # Security Configuration
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: jwt-secret
        - name: JWT_ALGORITHM
          value: "HS256"
        - name: JWT_EXPIRE_MINUTES
          value: "60"
        
        # Social Media APIs
        - name: TWITTER_API_KEY
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: twitter-api-key
        - name: TWITTER_API_SECRET
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: twitter-api-secret
        - name: TWITTER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: twitter-bearer-token
        
        - name: YOUTUBE_API_KEY
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: youtube-api-key
        
        - name: FACEBOOK_APP_ID
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: facebook-app-id
        - name: FACEBOOK_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: facebook-app-secret
        
        - name: LINKEDIN_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: linkedin-client-id
        - name: LINKEDIN_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: bloocube-secrets
              key: linkedin-client-secret
        
        # Feature Flags
        - name: ENABLE_COMPETITOR_ANALYSIS
          value: "true"
        - name: ENABLE_CONTENT_SUGGESTIONS
          value: "true"
        - name: ENABLE_MATCHMAKING
          value: "true"
        - name: ENABLE_TREND_ANALYSIS
          value: "true"
        - name: ENABLE_PERFORMANCE_PREDICTION
          value: "true"
        
        # Model Parameters
        - name: MAX_TOKENS
          value: "4000"
        - name: TEMPERATURE
          value: "0.7"
        - name: TOP_P
          value: "0.9"
        
        # Rate Limiting
        - name: RATE_LIMIT_PER_MINUTE
          value: "100"
        - name: RATE_LIMIT_BURST
          value: "200"
        
        # Logging
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        
        # Cache Configuration
        - name: CACHE_TTL
          value: "3600"
        - name: CACHE_MAX_SIZE
          value: "1000"
        
        # Performance Settings
        - name: MAX_CONCURRENT_REQUESTS
          value: "10"
        - name: BATCH_SIZE
          value: "32"
        
        # GCP Specific
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        
        # Health check configuration
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Startup probe for slow-starting containers (TCP socket is robust to app router changes)
        startupProbe:
          tcpSocket:
            port: 8080
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 24
      
      # Traffic configuration
  traffic:
  - percent: 100
    latestRevision: true
