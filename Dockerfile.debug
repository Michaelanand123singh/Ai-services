FROM python:3.11-slim

LABEL maintainer="Bloocube Team"
LABEL version="1.0.0"
LABEL description="Bloocube AI Services for GCP Cloud Run - Debug Version"

WORKDIR /app

# Environment
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV NLTK_DATA=/app/nltk_data
ENV NODE_ENV=production
ENV AI_SERVICE_PORT=8080
ENV AI_SERVICE_HOST=0.0.0.0

# System dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    curl \
    wget \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Create non-root user
RUN groupadd -r appgroup && \
    useradd -r -g appgroup -d /app -s /bin/bash -c "App User" appuser

# Copy requirements first for better caching
COPY requirements.txt ./

# Install Python dependencies with verbose output
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt --verbose

# Copy app
COPY . .

# Setup directories and permissions
RUN mkdir -p logs data uploads temp && \
    chown -R appuser:appgroup /app && \
    chmod -R 755 /app

USER appuser

# Simple startup script for debugging
RUN echo '#!/bin/bash\n\
echo "🚀 Starting Bloocube AI Services (Debug Mode)..."\n\
echo "📊 Environment: ${NODE_ENV:-production}"\n\
echo "🌐 Port: ${PORT:-8080}"\n\
echo "🏠 Host: ${AI_SERVICE_HOST:-0.0.0.0}"\n\
echo "🔍 Python version: $(python --version)"\n\
echo "🔍 Working directory: $(pwd)"\n\
echo "🔍 Files in /app: $(ls -la /app)"\n\
echo "🧪 Testing imports..."\n\
python -c "import fastapi; print(\"✅ FastAPI imported\")" || echo "❌ FastAPI import failed"\n\
python -c "import pydantic_settings; print(\"✅ Pydantic Settings imported\")" || echo "❌ Pydantic Settings import failed"\n\
python -c "import faiss; print(\"✅ FAISS imported\")" || echo "❌ FAISS import failed"\n\
echo "🚀 Starting application..."\n\
exec uvicorn src.main:app --host 0.0.0.0 --port 8080 --log-level info\n\
' > /app/start.sh && chmod +x /app/start.sh

EXPOSE 8080

CMD ["/app/start.sh"]
