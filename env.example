# =============================================================================
# BLOOCUBE AI SERVICES - ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all environment variables needed for the AI Services
# Based on deep analysis of Backend, Frontend, and AI Services integration
# =============================================================================

# -----------------------------------------------------------------------------
# üöÄ SERVICE CONFIGURATION
# -----------------------------------------------------------------------------
AI_SERVICE_NAME=bloocube-ai-service
AI_SERVICE_VERSION=1.0.0
AI_SERVICE_PORT=8001
AI_SERVICE_HOST=0.0.0.0

# Environment (development, staging, production)
NODE_ENV=development
ENVIRONMENT=development

# -----------------------------------------------------------------------------
# üóÑÔ∏è DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Primary MongoDB (shared with backend for user data, campaigns, posts)
MONGODB_URL=mongodb://localhost:27017/bloocube
MONGODB_URI=mongodb://localhost:27017/bloocube

# Redis for caching and session management (shared with backend)
REDIS_URL=redis://localhost:6379/0

# PostgreSQL for analytics and AI results (optional)
POSTGRES_URL=postgresql://user:password@localhost:5432/bloocube_ai

# -----------------------------------------------------------------------------
# ü§ñ AI MODEL CONFIGURATION
# -----------------------------------------------------------------------------
# OpenAI Configuration (Primary AI Provider)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4-turbo-preview
OPENAI_ORGANIZATION=your_openai_organization_id

# Embedding Models
EMBEDDING_MODEL=text-embedding-3-large
EMBEDDING_DIMENSION=3072

# Alternative Models (Optional)
ANTHROPIC_API_KEY=your_anthropic_api_key_here
GOOGLE_AI_API_KEY=your_google_ai_api_key_here
HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# -----------------------------------------------------------------------------
# üîç VECTOR DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Pinecone (Primary Vector DB)
PINECONE_API_KEY=your_pinecone_api_key_here
PINECONE_ENVIRONMENT=your_pinecone_environment
PINECONE_INDEX_NAME=bloocube-embeddings

# Alternative Vector DBs (Choose one)
FAISS_INDEX_PATH=./data/faiss_index
CHROMA_PERSIST_DIRECTORY=./data/chroma_db
WEAVIATE_URL=http://localhost:8080
QDRANT_URL=http://localhost:6333

# -----------------------------------------------------------------------------
# üì± SOCIAL MEDIA API KEYS (REMOVED - Backend handles data collection)
# -----------------------------------------------------------------------------
# NOTE: Social media API keys are no longer needed in AI services
# The backend now handles all data collection from social media platforms
# AI services focus purely on analysis of pre-collected data
# 
# If you need social media APIs for trend analysis or market research,
# add them to the backend service configuration instead

# -----------------------------------------------------------------------------
# üîó BACKEND SERVICE INTEGRATION (CRITICAL - Required for new flow)
# -----------------------------------------------------------------------------
# Backend Service URL (Node.js Backend) - REQUIRED
BACKEND_SERVICE_URL=http://localhost:5000
BACKEND_API_KEY=your_backend_api_key_here

# Frontend Service URL (Next.js Frontend)
FRONTEND_SERVICE_URL=http://localhost:3000

# API Endpoints - Updated for new competitor analysis flow
BACKEND_API_BASE=/api
BACKEND_AUTH_ENDPOINT=/api/auth
BACKEND_USERS_ENDPOINT=/api/users
BACKEND_CAMPAIGNS_ENDPOINT=/api/campaigns
BACKEND_POSTS_ENDPOINT=/api/posts
BACKEND_ANALYTICS_ENDPOINT=/api/analytics
BACKEND_COMPETITORS_ENDPOINT=/api/competitors

# Backend Authentication for AI Services
BACKEND_SERVICE_TOKEN=your_backend_service_token_here
BACKEND_WEBHOOK_SECRET=your_backend_webhook_secret_here

# -----------------------------------------------------------------------------
# üîê SECURITY & AUTHENTICATION
# -----------------------------------------------------------------------------
# JWT Configuration (must match backend)
JWT_SECRET=your_jwt_secret_here_must_match_backend
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=60
JWT_REFRESH_SECRET=your_jwt_refresh_secret_here

# API Security
API_KEY_HEADER=x-api-key
CORS_ORIGINS=http://localhost:3000,http://localhost:5000
ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=200
RATE_LIMIT_WINDOW_MS=60000

# -----------------------------------------------------------------------------
# üìä LOGGING & MONITORING
# -----------------------------------------------------------------------------
# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=./logs/ai-service.log
LOG_MAX_SIZE=10MB
LOG_MAX_FILES=5

# Monitoring & Health Checks
PROMETHEUS_PORT=9090
HEALTH_CHECK_INTERVAL=30
METRICS_ENABLED=true

# Error Tracking (Optional)
SENTRY_DSN=your_sentry_dsn_here
SENTRY_ENVIRONMENT=development

# -----------------------------------------------------------------------------
# üéõÔ∏è FEATURE FLAGS
# -----------------------------------------------------------------------------
# AI Features
ENABLE_COMPETITOR_ANALYSIS=true
ENABLE_CONTENT_SUGGESTIONS=true
ENABLE_MATCHMAKING=true
ENABLE_TREND_ANALYSIS=true
ENABLE_PERFORMANCE_PREDICTION=true
ENABLE_HASHTAG_SUGGESTIONS=true
ENABLE_CAPTION_GENERATION=true
ENABLE_OPTIMAL_TIMING=true

# Advanced Features
ENABLE_REAL_TIME_ANALYSIS=false
ENABLE_BATCH_PROCESSING=true
ENABLE_AUTO_POSTING=false
ENABLE_SENTIMENT_ANALYSIS=true

# -----------------------------------------------------------------------------
# ü§ñ AI MODEL PARAMETERS
# -----------------------------------------------------------------------------
# Text Generation
MAX_TOKENS=4000
TEMPERATURE=0.7
TOP_P=0.9
FREQUENCY_PENALTY=0.0
PRESENCE_PENALTY=0.0

# Content Analysis
MAX_CONTENT_LENGTH=10000
MIN_CONTENT_LENGTH=10
CONTENT_QUALITY_THRESHOLD=0.7

# Batch Processing
BATCH_SIZE=32
EMBEDDING_BATCH_SIZE=100
VECTOR_DIMENSION=1536
MAX_CONCURRENT_REQUESTS=10

# -----------------------------------------------------------------------------
# üíæ CACHE CONFIGURATION
# -----------------------------------------------------------------------------
# Redis Cache Settings
CACHE_TTL=3600
CACHE_MAX_SIZE=1000
CACHE_PREFIX=bloocube_ai
CACHE_COMPRESSION=true

# Memory Cache
MEMORY_CACHE_SIZE=500
MEMORY_CACHE_TTL=1800

# -----------------------------------------------------------------------------
# üîÑ BACKGROUND TASKS & QUEUES
# -----------------------------------------------------------------------------
# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=["json"]
CELERY_TIMEZONE=UTC

# Task Queues
QUEUE_HIGH_PRIORITY=ai_high
QUEUE_NORMAL_PRIORITY=ai_normal
QUEUE_LOW_PRIORITY=ai_low

# -----------------------------------------------------------------------------
# üìà ANALYTICS & PERFORMANCE
# -----------------------------------------------------------------------------
# Performance Tracking
TRACK_PERFORMANCE=true
PERFORMANCE_SAMPLE_RATE=0.1
MAX_RESPONSE_TIME_MS=30000

# Analytics Integration
GOOGLE_ANALYTICS_ID=your_ga_tracking_id
MIXPANEL_TOKEN=your_mixpanel_token

# -----------------------------------------------------------------------------
# üåê EXTERNAL SERVICES (UPDATED - Reduced scope)
# -----------------------------------------------------------------------------
# Web Scraping (REMOVED - Backend handles data collection)
# SCRAPING_USER_AGENT=BloocubeAI/1.0
# SCRAPING_DELAY_MS=1000
# MAX_SCRAPING_PAGES=50

# Image Processing
CLOUDINARY_CLOUD_NAME=your_cloudinary_name
CLOUDINARY_API_KEY=your_cloudinary_key
CLOUDINARY_API_SECRET=your_cloudinary_secret

# Email Service (for notifications)
SENDGRID_API_KEY=your_sendgrid_api_key
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_email_password

# -----------------------------------------------------------------------------
# üîß DEVELOPMENT & DEBUGGING
# -----------------------------------------------------------------------------
# Development Settings
DEBUG=false
VERBOSE_LOGGING=false
ENABLE_PROFILING=false
MOCK_EXTERNAL_APIS=false

# Testing
TEST_DATABASE_URL=mongodb://localhost:27017/bloocube_test
TEST_REDIS_URL=redis://localhost:6379/15
RUN_INTEGRATION_TESTS=false

# -----------------------------------------------------------------------------
# üöÄ DEPLOYMENT CONFIGURATION
# -----------------------------------------------------------------------------
# Cloud Configuration (GCP)
GOOGLE_CLOUD_PROJECT=your-gcp-project-id
GOOGLE_APPLICATION_CREDENTIALS=./path/to/service-account.json

# Container Configuration
CONTAINER_PORT=8001
CONTAINER_MEMORY_LIMIT=2Gi
CONTAINER_CPU_LIMIT=1000m

# Load Balancing
MAX_WORKERS=4
WORKER_TIMEOUT=300
KEEP_ALIVE=2

# -----------------------------------------------------------------------------
# üìä BUSINESS LOGIC CONFIGURATION (UPDATED for Analysis-Only Flow)
# -----------------------------------------------------------------------------
# Competitor Analysis (AI Processing Only)
MAX_COMPETITORS_PER_ANALYSIS=10
ANALYSIS_CONFIDENCE_THRESHOLD=0.7
MIN_DATA_QUALITY_SCORE=0.6
ANALYSIS_TIMEOUT_SECONDS=300

# Content Suggestions
MAX_SUGGESTIONS_PER_REQUEST=50
SUGGESTION_CACHE_HOURS=24
MIN_CONTENT_SCORE=0.6

# Matchmaking
MAX_MATCHES_PER_REQUEST=20
MIN_COMPATIBILITY_SCORE=0.7
MATCHMAKING_CACHE_HOURS=12

# Trend Analysis
TREND_UPDATE_INTERVAL_HOURS=6
MAX_TRENDING_TOPICS=100
TREND_RELEVANCE_THRESHOLD=0.8

# -----------------------------------------------------------------------------
# üéØ PLATFORM-SPECIFIC CONFIGURATIONS
# -----------------------------------------------------------------------------
# Instagram
INSTAGRAM_MAX_HASHTAGS=30
INSTAGRAM_MAX_CAPTION_LENGTH=2200
INSTAGRAM_OPTIMAL_POST_TIMES=["9:00","12:00","15:00","18:00","21:00"]

# Twitter/X
TWITTER_MAX_HASHTAGS=10
TWITTER_MAX_TWEET_LENGTH=280
TWITTER_OPTIMAL_POST_TIMES=["8:00","12:00","17:00","20:00"]

# YouTube
YOUTUBE_MAX_TITLE_LENGTH=100
YOUTUBE_MAX_DESCRIPTION_LENGTH=5000
YOUTUBE_OPTIMAL_UPLOAD_TIMES=["14:00","15:00","16:00","17:00"]

# LinkedIn
LINKEDIN_MAX_POST_LENGTH=3000
LINKEDIN_OPTIMAL_POST_TIMES=["8:00","12:00","17:00","18:00"]

# Facebook
FACEBOOK_MAX_POST_LENGTH=63206
FACEBOOK_OPTIMAL_POST_TIMES=["9:00","13:00","15:00","19:00"]

# -----------------------------------------------------------------------------
# üîÑ DATA SYNC & BACKUP
# -----------------------------------------------------------------------------
# Data Synchronization
SYNC_INTERVAL_MINUTES=30
SYNC_BATCH_SIZE=1000
ENABLE_REAL_TIME_SYNC=true

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=./backups

# -----------------------------------------------------------------------------
# üé® UI/UX INTEGRATION
# -----------------------------------------------------------------------------
# Frontend Integration
WEBSOCKET_ENABLED=true
WEBSOCKET_PORT=8002
REAL_TIME_UPDATES=true

# Notification Settings
ENABLE_PUSH_NOTIFICATIONS=true
NOTIFICATION_QUEUE=notifications
MAX_NOTIFICATIONS_PER_USER=100

# -----------------------------------------------------------------------------
# üì± MOBILE APP INTEGRATION (Future)
# -----------------------------------------------------------------------------
# Mobile API
MOBILE_API_VERSION=v1
MOBILE_MAX_REQUEST_SIZE=10MB
ENABLE_OFFLINE_MODE=false

# Push Notifications
FCM_SERVER_KEY=your_fcm_server_key
APNS_KEY_ID=your_apns_key_id
APNS_TEAM_ID=your_apns_team_id

# =============================================================================
# üìù CONFIGURATION NOTES - UPDATED FOR OPTIMIZED FLOW
# =============================================================================
# 1. Replace all placeholder values (your_*_here) with actual credentials
# 2. Keep JWT_SECRET in sync with backend for proper authentication
# 3. BACKEND_SERVICE_URL is CRITICAL - AI services depend on backend data
# 4. Social media API keys are NO LONGER needed (backend handles data collection)
# 5. Focus on AI model credentials (OpenAI, Anthropic, etc.)
# 6. Vector database setup is essential for embeddings and RAG
# 7. Use strong, unique passwords and API keys in production
# 8. Enable HTTPS in production environments
# 9. Configure proper CORS origins for security
# 10. Set up monitoring and alerting for production deployments
# 11. Regularly rotate API keys and secrets
# 12. Use environment-specific configurations (dev, staging, prod)
# 
# CRITICAL CREDENTIALS FOR NEW FLOW:
# - OPENAI_API_KEY (for AI analysis)
# - BACKEND_SERVICE_URL (for data integration)
# - MONGODB_URL (shared database)
# - REDIS_URL (shared cache)
# - JWT_SECRET (must match backend)
# =============================================================================